import pandas as pd
import json
import gfdlws as gw
from dat import *
from datetime import datetime
import time

fhand = open("download.txt","a")
lhand = open("Downloads.txt","a")
fhand1 = open("datelogs","a")
fhand2 = open("dates.txt","a")

api_key = "5ed32a65-3412-4458-af18-3154c88708aa"
end_point = "ws://test.lisuns.com:4575/"
con = gw.ws.connect(end_point, api_key)

new_order = ["Stock","Date","Time","OpenInterest","Open","High","Low","Close"]
times = ['09:15:00', '09:16:00', '09:17:00', '09:18:00', '09:19:00', '09:20:00', '09:21:00', '09:22:00', '09:23:00', '09:24:00', '09:25:00', '09:26:00', '09:27:00', '09:28:00', '09:29:00', '09:30:00', '09:31:00', '09:32:00', '09:33:00', '09:34:00', '09:35:00', '09:36:00', '09:37:00', '09:38:00', '09:39:00', '09:40:00', '09:41:00', '09:42:00', '09:43:00', '09:44:00', '09:45:00', '09:46:00', '09:47:00', '09:48:00', '09:49:00', '09:50:00', '09:51:00', '09:52:00', '09:53:00', '09:54:00', '09:55:00', '09:56:00', '09:57:00', '09:58:00', '09:59:00', 
         '10:00:00', '10:01:00', '10:02:00', '10:03:00', '10:04:00', '10:05:00', '10:06:00', '10:07:00', '10:08:00', '10:09:00', '10:10:00', '10:11:00', '10:12:00', '10:13:00', '10:14:00', '10:15:00', '10:16:00', '10:17:00', '10:18:00', '10:19:00', '10:20:00', '10:21:00', '10:22:00', '10:23:00', '10:24:00', '10:25:00', '10:26:00', '10:27:00', '10:28:00', '10:29:00', '10:30:00', '10:31:00', '10:32:00', '10:33:00', '10:34:00', '10:35:00', '10:36:00', '10:37:00', '10:38:00', '10:39:00', '10:40:00', '10:41:00', '10:42:00', '10:43:00', '10:44:00', '10:45:00', '10:46:00', '10:47:00', '10:48:00', '10:49:00', '10:50:00', '10:51:00', '10:52:00', '10:53:00', '10:54:00', '10:55:00', '10:56:00', '10:57:00', '10:58:00', '10:59:00', 
         '11:00:00', '11:01:00', '11:02:00', '11:03:00', '11:04:00', '11:05:00', '11:06:00', '11:07:00', '11:08:00', '11:09:00', '11:10:00', '11:11:00', '11:12:00', '11:13:00', '11:14:00', '11:15:00', '11:16:00', '11:17:00', '11:18:00', '11:19:00', '11:20:00', '11:21:00', '11:22:00', '11:23:00', '11:24:00', '11:25:00', '11:26:00', '11:27:00', '11:28:00', '11:29:00', '11:30:00', '11:31:00', '11:32:00', '11:33:00', '11:34:00', '11:35:00', '11:36:00', '11:37:00', '11:38:00', '11:39:00', '11:40:00', '11:41:00', '11:42:00', '11:43:00', '11:44:00', '11:45:00', '11:46:00', '11:47:00', '11:48:00', '11:49:00', '11:50:00', '11:51:00', '11:52:00', '11:53:00', '11:54:00', '11:55:00', '11:56:00', '11:57:00', '11:58:00', '11:59:00', 
         '12:00:00', '12:01:00', '12:02:00', '12:03:00', '12:04:00', '12:05:00', '12:06:00', '12:07:00', '12:08:00', '12:09:00', '12:10:00', '12:11:00', '12:12:00', '12:13:00', '12:14:00', '12:15:00', '12:16:00', '12:17:00', '12:18:00', '12:19:00', '12:20:00', '12:21:00', '12:22:00', '12:23:00', '12:24:00', '12:25:00', '12:26:00', '12:27:00', '12:28:00', '12:29:00', '12:30:00', '12:31:00', '12:32:00', '12:33:00', '12:34:00', '12:35:00', '12:36:00', '12:37:00', '12:38:00', '12:39:00', '12:40:00', '12:41:00', '12:42:00', '12:43:00', '12:44:00', '12:45:00', '12:46:00', '12:47:00', '12:48:00', '12:49:00', '12:50:00', '12:51:00', '12:52:00', '12:53:00', '12:54:00', '12:55:00', '12:56:00', '12:57:00', '12:58:00', '12:59:00', 
         '13:00:00', '13:01:00', '13:02:00', '13:03:00', '13:04:00', '13:05:00', '13:06:00', '13:07:00', '13:08:00', '13:09:00', '13:10:00', '13:11:00', '13:12:00', '13:13:00', '13:14:00', '13:15:00', '13:16:00', '13:17:00', '13:18:00', '13:19:00', '13:20:00', '13:21:00', '13:22:00', '13:23:00', '13:24:00', '13:25:00', '13:26:00', '13:27:00', '13:28:00', '13:29:00', '13:30:00', '13:31:00', '13:32:00', '13:33:00', '13:34:00', '13:35:00', '13:36:00', '13:37:00', '13:38:00', '13:39:00', '13:40:00', '13:41:00', '13:42:00', '13:43:00', '13:44:00', '13:45:00', '13:46:00', '13:47:00', '13:48:00', '13:49:00', '13:50:00', '13:51:00', '13:52:00', '13:53:00', '13:54:00', '13:55:00', '13:56:00', '13:57:00', '13:58:00', '13:59:00', 
         '14:00:00', '14:01:00', '14:02:00', '14:03:00', '14:04:00', '14:05:00', '14:06:00', '14:07:00', '14:08:00', '14:09:00', '14:10:00', '14:11:00', '14:12:00', '14:13:00', '14:14:00', '14:15:00', '14:16:00', '14:17:00', '14:18:00', '14:19:00', '14:20:00', '14:21:00', '14:22:00', '14:23:00', '14:24:00', '14:25:00', '14:26:00', '14:27:00', '14:28:00', '14:29:00', '14:30:00', '14:31:00', '14:32:00', '14:33:00', '14:34:00', '14:35:00', '14:36:00', '14:37:00', '14:38:00', '14:39:00', '14:40:00', '14:41:00', '14:42:00', '14:43:00', '14:44:00', '14:45:00', '14:46:00', '14:47:00', '14:48:00', '14:49:00', '14:50:00', '14:51:00', '14:52:00', '14:53:00', '14:54:00', '14:55:00', '14:56:00', '14:57:00', '14:58:00', '14:59:00', 
         '15:00:00', '15:01:00', '15:02:00', '15:03:00', '15:04:00', '15:05:00', '15:06:00', '15:07:00', '15:08:00', '15:09:00', '15:10:00', '15:11:00', '15:12:00', '15:13:00', '15:14:00', '15:15:00', '15:16:00', '15:17:00', '15:18:00', '15:19:00', '15:20:00', '15:21:00', '15:22:00', '15:23:00', '15:24:00', '15:25:00', '15:26:00', '15:27:00', '15:28:00', '15:29:00', '15:30:00']


def callthis(stock,con):
    start_time = time.time()
    print(stock, end = " ")
    response = json.loads(gw.history.getbyperiod(con,'NSE',f'{stock}','MINUTE','1','0','1546314300','vk','false'))
    fhand.write(str(response)[:300] + "\n")
    df = pd.DataFrame(response["Result"])
    if len(df)>3:
        df["LastTradeTime"] += 19800
        df["Datetime"] = pd.to_datetime(df["LastTradeTime"],unit='s')
        df = df.assign(Stock = f"{stock}")
        df = df.sort_values("Datetime")
        # Create new columns 'Date' and 'Time'
        df['Date'] = df['Datetime'].dt.date
        df['Time'] = df['Datetime'].dt.time
        
        df = df[new_order]
        df.to_csv(f"stocks/{stock}.csv",index = False)

        df = pd.read_csv(f"stocks/{stock}.csv")
        df = df[df['Time'].isin(times)] # data filteration for market hours only
        df.to_csv(f"stocks/{stock}.csv",index = False)
        
        lhand.write(f"{stock}, {len(df)}")
        date_counts = df['Date'].value_counts()
        date_counts = sorted(date_counts.items(), key = lambda x: x[0])
        for k,v in date_counts:
            fhand2.write(f"{k}, {v}\n")
        fhand2.write("\n\n")
        s = f"{stock}, {len(date_counts)}, {date_counts[0][0]}, {date_counts[-1][0]}" + "\n"
        fhand1.write(s)
    else:
        lhand.write(f"No data {stock}, {len(df)}")
    return start_time
for stock in stocks:
    st = callthis(stock,con)
    en = time.time()
    ex = en-st
    lhand.write(f" {ex} \n")
    print(f"{ex} Downloaded")


lhand.write("\n\n")
fhand.write("\n\n")
fhand1.write("\n\n")
fhand2.write("################################################################################\n\n")
